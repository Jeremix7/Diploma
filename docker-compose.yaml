services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - scoring-net

  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"
    networks:
      - scoring-net

  kafka:
    image: bitnami/kafka:2.8.1
    container_name: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - scoring-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - scoring-net

  airflow-init:
    image: apache/airflow:2.9.1
    container_name: airflow-init
    entrypoint: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:user@postgres:5432/user
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'mysecret'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    networks:
      - scoring-net
    depends_on:
      - postgres

  airflow-webserver:
    image: apache/airflow:2.9.1
    container_name: airflow-webserver
    command: webserver
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:user@postgres:5432/user
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    networks:
      - scoring-net

  airflow-scheduler:
    image: apache/airflow:2.9.1
    container_name: airflow-scheduler
    command: scheduler
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:user@postgres:5432/user
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    networks:
      - scoring-net

  superset:
    image: apache/superset:latest
    container_name: superset
    environment:
      SUPERSET_SECRET_KEY: 'mysecret'
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    networks:
      - scoring-net

volumes:
  postgres_data:

networks:
  scoring-net:
